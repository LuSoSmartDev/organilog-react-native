fastlane_version "2.1.3"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :dev do
    gradle(
      project_dir: './android',
      task: "assembleRelease"
    )

    crashlytics(
      notifications: true,
      groups: ['dev'],
      api_token: "ae68f35c1d6e6dc70a7d0f0b6bf1ce034225d0ed",
      build_secret: "65bacb0981192ae3537bdaa996f65ef1568bc64fd98007f8d7cc13770c9b27fa",
      notes_path: "./release-notes-beta.txt"
    )
  end

  lane :ant do
    gradle(
      project_dir: './android',
      task: "assembleRelease"
    )

    crashlytics(
      notifications: true,
      groups: ['ant'],
      api_token: "ae68f35c1d6e6dc70a7d0f0b6bf1ce034225d0ed",
      build_secret: "65bacb0981192ae3537bdaa996f65ef1568bc64fd98007f8d7cc13770c9b27fa",
      notes_path: "./release-notes-beta.txt"
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "assembleRelease")
    supply
  end

  # You can define as many lanes as you want
  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :beta do
    match(type: "appstore")

    gym(
      scheme: "Organilog",
      project: './ios/Organilog.xcodeproj'
    )

    pilot

  end
end
